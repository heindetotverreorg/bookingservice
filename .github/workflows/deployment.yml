name: Deploy bookingservice to pi
on: 
  push: 
    branches: 
      - main
  workflow_dispatch:
env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REPO: ${{ github.repository }}
  IMAGE_PATH: ${{ secrets.DOCKER_NAMESPACE }}/bookingservice:latest
  IMAGE_NAME: bookingservice
  USER_NAME: ${{ secrets.DOCKER_NAMESPACE }}
jobs: 
  test: 
    name: Unit test suite
    runs-on: self-hosted
    steps: 
      - name: Get code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
  publish:
    needs: test
    name: Build image and publish to docker
    runs-on: self-hosted
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Build and Publish image
          # no need to setup ssh because the GitHub runner runs on the same domain as the server
        run: |
          ssh ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }} -p 22 -o ConnectTimeout="10" -o StrictHostKeyChecking=no <<'ENDSSH'
          cd ~/
          git clone ${{ env.REPO }}
          cd ~/${{ env.IMAGE_PATH }}
          docker build -t ${{ env.IMAGE_PATH }} .
          docker login -u ${{ github.actor }} -p ${{ env.DOCKER_PASSWORD }}
          docker push ${{ env.IMAGE_PATH }}
          rm -rf ${{ env.IMAGE_NAME }}
  deploy:
    needs: publish
    name: Copy config and start service
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Copy config
      run: |
        ssh ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }} -p 22 -o ConnectTimeout="10" -o StrictHostKeyChecking=no <<'ENDSSH'
        mkdir -p ~/${{ env.IMAGE_NAME }}
        ENDSSH
        scp -o StrictHostKeyChecking=no -r ./compose.yml ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }}:~/${{ env.IMAGE_NAME }}/
    - name: Start service
      run: |
        ssh ${{ env.USER_NAME }}@${{ secrets.SERVER_HOST }} -p 22 -o ConnectTimeout="10" -o StrictHostKeyChecking=no <<'ENDSSH'
        cd ~/${{ env.IMAGE_NAME }}
        docker compose down
        docker system prune -af
        docker compose up -d 
        exit